# coding: utf-8

"""
    Opendatasoft's Automation API Documentation

    Opendatasoft REST API to manage your portal and its catalog

    The version of the OpenAPI document: 1.0
    Contact: support@opendatasoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.metadata_template_field import MetadataTemplateField

class TestMetadataTemplateField(unittest.TestCase):
    """MetadataTemplateField unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetadataTemplateField:
        """Test MetadataTemplateField
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetadataTemplateField`
        """
        model = MetadataTemplateField()
        if include_optional:
            return MetadataTemplateField(
                name = 'my-custom-field',
                type = 'text',
                label = 'My custom field',
                help_text = '',
                is_hidden = False,
                self_suggest = False,
                is_filter = False,
                i18n = False,
                suggest_url = '',
                choices = [
                    ''
                    ],
                labels = {
                    'key' : {
                        'key' : ''
                        }
                    },
                requirement_level = 'optional'
            )
        else:
            return MetadataTemplateField(
                name = 'my-custom-field',
        )
        """

    def testMetadataTemplateField(self):
        """Test MetadataTemplateField"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

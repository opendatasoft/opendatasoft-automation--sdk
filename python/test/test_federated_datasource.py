# coding: utf-8

"""
    Opendatasoft's Automation API Documentation

    Opendatasoft REST API to manage your portal and its catalog

    The version of the OpenAPI document: 1.0
    Contact: support@opendatasoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from opendatasoft_automation.models.federated_datasource import FederatedDatasource

class TestFederatedDatasource(unittest.TestCase):
    """FederatedDatasource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FederatedDatasource:
        """Test FederatedDatasource
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FederatedDatasource`
        """
        model = FederatedDatasource()
        if include_optional:
            return FederatedDatasource(
                domain = opendatasoft_automation.models.federated_datasource_all_of_domain.FederatedDatasource_allOf_domain(
                    domain_id = '', ),
                dataset = None,
                permissions_user = opendatasoft_automation.models.related_user.Related user(
                    username = 'louise.data', ),
                impersonate_permissions = True,
                parameters = None
            )
        else:
            return FederatedDatasource(
                domain = opendatasoft_automation.models.federated_datasource_all_of_domain.FederatedDatasource_allOf_domain(
                    domain_id = '', ),
                dataset = None,
                impersonate_permissions = True,
        )
        """

    def testFederatedDatasource(self):
        """Test FederatedDatasource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

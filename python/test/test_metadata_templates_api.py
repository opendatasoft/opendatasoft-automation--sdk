# coding: utf-8

"""
    Opendatasoft's Automation API Documentation

    Opendatasoft REST API to manage your portal and its catalog

    The version of the OpenAPI document: 1.0
    Contact: support@opendatasoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.metadata_templates_api import MetadataTemplatesApi


class TestMetadataTemplatesApi(unittest.TestCase):
    """MetadataTemplatesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = MetadataTemplatesApi()

    def tearDown(self) -> None:
        pass

    def test_create_metadata_template(self) -> None:
        """Test case for create_metadata_template

        Create metadata template
        """
        pass

    def test_delete_metadata_template(self) -> None:
        """Test case for delete_metadata_template

        Delete a metadata template
        """
        pass

    def test_get_metadata_field_values_suggestion(self) -> None:
        """Test case for get_metadata_field_values_suggestion

        Suggest field choices
        """
        pass

    def test_get_metadata_fields_list(self) -> None:
        """Test case for get_metadata_fields_list

        List template's fields
        """
        pass

    def test_get_metadata_fields_retrieve(self) -> None:
        """Test case for get_metadata_fields_retrieve

        Retrieve metadata template field
        """
        pass

    def test_list_metadata_templates(self) -> None:
        """Test case for list_metadata_templates

        List metadata templates
        """
        pass

    def test_retrieve_metadata_templates(self) -> None:
        """Test case for retrieve_metadata_templates

        Retrieve a metadata template
        """
        pass

    def test_update_metadata_template(self) -> None:
        """Test case for update_metadata_template

        Update metadata template
        """
        pass


if __name__ == '__main__':
    unittest.main()

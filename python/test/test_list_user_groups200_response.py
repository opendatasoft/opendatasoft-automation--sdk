# coding: utf-8

"""
    Opendatasoft's Automation API Documentation

    Opendatasoft REST API to manage your portal and its catalog

    The version of the OpenAPI document: 1.0
    Contact: support@opendatasoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from opendatasoft_automation.models.list_user_groups200_response import ListUserGroups200Response

class TestListUserGroups200Response(unittest.TestCase):
    """ListUserGroups200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListUserGroups200Response:
        """Test ListUserGroups200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListUserGroups200Response`
        """
        model = ListUserGroups200Response()
        if include_optional:
            return ListUserGroups200Response(
                total_count = '',
                next = '',
                previous = '',
                results = [
                    opendatasoft_automation.models.user_group_schema.User group schema(
                        uid = 'content_designers', 
                        title = 'Content Designers', 
                        description = 'This wonderful group is for designers only.', 
                        user_count = 42, 
                        permissions = ["explore_restricted_dataset"], 
                        explore_limits = opendatasoft_automation.models.explore_limits.ExploreLimits(
                            api_calls = opendatasoft_automation.models.explore_limits_api_calls.ExploreLimits_api_calls(
                                limit = 2000, 
                                unit = 'day', ), ), 
                        management_limits = {}, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = opendatasoft_automation.models.related_user.Related user(
                            username = 'louise.data', ), 
                        updated_by = opendatasoft_automation.models.related_user.Related user(
                            username = 'louise.data', ), )
                    ]
            )
        else:
            return ListUserGroups200Response(
        )
        """

    def testListUserGroups200Response(self):
        """Test ListUserGroups200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

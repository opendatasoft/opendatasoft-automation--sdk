# coding: utf-8

"""
    Opendatasoft's Automation API Documentation

    Opendatasoft REST API to manage your portal and its catalog

    The version of the OpenAPI document: 1.0
    Contact: support@opendatasoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_dataset_versions200_response import ListDatasetVersions200Response

class TestListDatasetVersions200Response(unittest.TestCase):
    """ListDatasetVersions200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListDatasetVersions200Response:
        """Test ListDatasetVersions200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListDatasetVersions200Response`
        """
        model = ListDatasetVersions200Response()
        if include_optional:
            return ListDatasetVersions200Response(
                total_count = 56,
                next = '',
                previous = '',
                results = [
                    openapi_client.models.dataset_version_schema.Dataset version schema(
                        uid = 'ch_qf2hyt', 
                        sections = ["data"], 
                        created_by = openapi_client.models.related_user.Related user(
                            username = 'louise.data', ), 
                        can_restore = True, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return ListDatasetVersions200Response(
        )
        """

    def testListDatasetVersions200Response(self):
        """Test ListDatasetVersions200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

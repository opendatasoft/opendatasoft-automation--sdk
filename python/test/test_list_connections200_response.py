# coding: utf-8

"""
    Opendatasoft's Automation API Documentation

    Opendatasoft REST API to manage your portal and its catalog

    The version of the OpenAPI document: 1.0
    Contact: support@opendatasoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_connections200_response import ListConnections200Response

class TestListConnections200Response(unittest.TestCase):
    """ListConnections200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListConnections200Response:
        """Test ListConnections200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListConnections200Response`
        """
        model = ListConnections200Response()
        if include_optional:
            return ListConnections200Response(
                total_count = '18',
                next = '',
                previous = '',
                results = [
                    openapi_client.models.connection_schema.Connection schema(
                        uid = 'co_qf2hyt', 
                        type = '0', 
                        is_reusable = True, 
                        can_reuse = True, 
                        can_manage = True, 
                        dataset_count = 59, 
                        user_count = 7, 
                        group_count = 4, 
                        created_at = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        updated_at = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ]
            )
        else:
            return ListConnections200Response(
        )
        """

    def testListConnections200Response(self):
        """Test ListConnections200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

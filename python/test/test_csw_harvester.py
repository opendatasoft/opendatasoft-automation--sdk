# coding: utf-8

"""
    Opendatasoft's Automation API Documentation

    Opendatasoft REST API to manage your portal and its catalog

    The version of the OpenAPI document: 1.0
    Contact: support@opendatasoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from opendatasoft_automation.models.csw_harvester import CSWHarvester

class TestCSWHarvester(unittest.TestCase):
    """CSWHarvester unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CSWHarvester:
        """Test CSWHarvester
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CSWHarvester`
        """
        model = CSWHarvester()
        if include_optional:
            return CSWHarvester(
                url = 'https://infogeo.grandpoitiers.fr/geoportal/csw',
                keywords_thesaurus = '',
                theme_thesaurus = '',
                insert_br_in_description = True,
                constraint_language = True,
                invert_coordinates = True,
                themes_mapping = {"thesaurus_name_or_id":{"remote_theme":"ods_theme"}},
                licenses_mapping = {"remote_license":"ods_license"},
                metadata_only = True
            )
        else:
            return CSWHarvester(
                url = 'https://infogeo.grandpoitiers.fr/geoportal/csw',
        )
        """

    def testCSWHarvester(self):
        """Test CSWHarvester"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
